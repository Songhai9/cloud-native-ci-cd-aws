name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the code
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Amazon ECR (optional if you want to scan the image before pushing it)
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Build Docker image (example: service-api)
      - name: Build Docker image
        run: |
          cd 03_Application/service-api
          docker build -t service-api:latest .

      # 5. Unit tests (Python example)
      - name: Run tests
        run: |
          # place your unit tests here, e.g.:
          cd 03_Application/service-api
          pytest --maxfail=1 --disable-warnings -q  # if you have test suite
          # or "python -m unittest" etc.

      # 6. Scan image for vulnerabilities (e.g. Trivy)
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: service-api:latest
          exit-code: "0"  # or "1" to fail the job if vulnerabilities found
          format: 'table'

      # 7. Upload artifact (optional): logs, coverage, etc.
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-reports