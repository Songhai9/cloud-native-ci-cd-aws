name: CI

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the code
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # 4. Log in to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 5. Build Docker image (optional in CI)
      - name: Build Docker image
        run: |
          cd Application/service-api
          docker build -t service-api:latest .

      # 6. Set up Python on the runner
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # 7. Install dependencies (on the runner)
      - name: Install dependencies
        run: |
          cd Application/service-api
          # Use "python -m pip" to ensure we use the same Python as "python"
          python -m pip install --no-cache-dir -r requirements.txt
          python -m pip install pytest

      # 8. Run tests
      - name: Run tests
        run: |
          cd Application/service-api
          # Again, be sure to call "python" or "pytest"
          pytest --maxfail=1 --disable-warnings -q

      # 9. Scan image for vulnerabilities
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: service-api:latest
          exit-code: "0"
          format: "table"

      # 10. Upload artifacts
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-reports

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}